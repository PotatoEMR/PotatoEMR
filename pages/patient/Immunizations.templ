package pages_patient

import (
	"github.com/PotatoEMR/PotatoEMR/pages"
	r4 "github.com/PotatoEMR/simple-fhir-client/r4"
	r4Client "github.com/PotatoEMR/simple-fhir-client/r4Client"

	"fmt"
	"net/http"
)

func Immunizations(w http.ResponseWriter, req *http.Request) {
	id := req.PathValue("patId")
	client := r4Client.New("r4.smarthealthit.org/")
	patEverything, err := client.PatientEverythingGrouped(id)

	if err != nil {
		pages.ErrorMsg(err).Render(req.Context(), w)
	} else if len(patEverything.Patients) != 1 {
		pages.ErrorMsg(fmt.Errorf("patient list should be len 1, is %d", len(patEverything.Patients))).Render(req.Context(), w)
	} else {
		pat := patEverything.Patients[0]
		T_Immunizations(pat, patEverything).Render(req.Context(), w)
	}
}

templ T_Immunizations(pat *r4.Patient, patEverything *r4Client.ResourceGroup) {
	@Base_Patient(pat, patEverything, TabImmunizationHistory) {
		<p>Immunizations</p>
	}
}
