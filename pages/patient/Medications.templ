package pages_patient

import (
	"errors"
	"github.com/PotatoEMR/PotatoEMR/pages"
	r4 "github.com/PotatoEMR/simple-fhir-client/r4"
	r4Client "github.com/PotatoEMR/simple-fhir-client/r4Client"

	"net/http"
)

func Medications(w http.ResponseWriter, req *http.Request) {
	patId := req.PathValue("patId")
	patEverything, err := Client.PatientEverythingGrouped(patId)

	if err != nil {
		pages.ErrorMsg(err).Render(req.Context(), w)
	} else if len(patEverything.Patients) != 1 {
		pages.ErrorMsg(errors.New("Patient id "+patId+" not found on server "+Client.BaseUrl)).Render(req.Context(), w)
	} else {
		pat := patEverything.Patients[0]
		T_Medications(pat, patEverything).Render(req.Context(), w)
	}
}

templ T_Medications(pat *r4.Patient, patEverything *r4Client.ResourceGroup) {
	@Base_Patient(pat, patEverything, TabMedications) {
		<p>Medications</p>
	}
}
